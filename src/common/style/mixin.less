// 自适应的mixin
@charset "utf-8";
//此class类需添加在html元素上
.rem-responsive{
//  在此变量上设置默认的基准屏viewport的width
  @firstViewportWidth: 750px;

//  以320pxViewport的Width下的font size值为基准
  @defaultFontSize: 40px;

  @media screen and (width: @firstViewportWidth){
    font-size: @defaultFontSize;
  }

//  定义一个media 方法，通过媒体判断设置不同屏幕下的html的font size值
  .media(@viewportWidth,@firstViewportWidth:750px){
    @media (width: @viewportWidth) {
      font-size: @defaultFontSize / (@firstViewportWidth / @viewportWidth);
    }
  }

//  一般只用传一个参数，也就是需要改变字体大小的viewport的width
  .media(320px);
  .media(360px);
  .media(375px);
  .media(384px);
  .media(400px);
  .media(414px);
  .media(424px);
  .media(480px);
  .media(540px);
  .media(720px);
  .media(960px);
  .media(966px);
  .media(1024px);
  .media(1280px);

  >body{
  //    实际项目中，这里body的font size大小应该和reset里定义的一致，可以通过一个变量让其保持同步
    font-size: initial;
  }
}

//@htmlDefaultFontSize的值为@defaultFontSize的值，单位为rem
.rem-responsive-comput-value(@sizeValue,@htmlDefaultFontSize:40rem){
  @rem-responsive-comput-value: @sizeValue / @htmlDefaultFontSize;
}

.demo{
  //使用者只需关注这个mixin方法
  // 传入需要的参数，左边的是元素对应的长度，无单位，值为元素单位为px时的长度大小。右边是html 640px宽度下的的font size，如果需拓宽元素宽度，可以传参数，否则不用传
  .rem-responsive-comput-value(750);
  // 此处将“.Dd-rem-responsive-comput-value”mixin方法进行调用，会返回相应的值
  width: @rem-responsive-comput-value;

  //使用者只需关注这个mixin方法 END
}

// 背景图片
.bgimage(@arguments) {
  background-image: url("@{arguments}@2x.png");
  @media (-webkit-min-device-pixel-ratio: 3), (min-device-pixel-ratio: 3) {
    background-image: url("@{arguments}@3x.png");
  }
}

// 不换行
.no-wrap(){
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}
// 扩展点击区域
.extend-click(){
  position: relative;
  &:before{
    content: '';
    position: absolute;
    top: -10px;
    left: -10px;
    right: -10px;
    bottom: -10px;
  }
}
// 清除浮动
.clearfix(){
  &::after{
    content: '';
    display: block;
    clear: both;
    height: 0;
    visibility: hidden;
  }
}
